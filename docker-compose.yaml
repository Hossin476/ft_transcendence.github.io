services:
  frontend:
    container_name: frontend
    build: ./Frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=${BACKEND_URL}
      - VITE_URI_INTRA=${INTRA_URI_REDIRECT}
    volumes:
      - ./Frontend/src:/usr/src/app/src
      - ./Frontend/dist:/usr/src/app/dist
    restart: always
  backend:
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - UID=${UID}
      - INTRA_SECRET=${INTRA_SECRET}
      - INTRA_URI_REDIRECT=${INTRA_URI_REDIRECT}
      - INTRA_URL=${INTRA_URL}
    build: ./Backend
    volumes:
      - ./Backend:/usr/src/app
    depends_on:
      - db
  db:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    ports:
      - 5432:5432
    volumes:
      - ./database/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "db"]
    restart: always
  redis:
    container_name: redis
    image: redis:7
    ports:
      - 6379:6379
    restart: always
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
        - 443:8080
    volumes:
      - ./Frontend/dist:/var/www/react/
    depends_on:
      - backend
      - frontend
